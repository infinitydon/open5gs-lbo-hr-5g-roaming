apiVersion: v1
kind: Service
metadata:
  name: pcf
  labels:
    epc-mode: pcf
spec:
  selector:
    epc-mode: pcf
  ports:
    - protocol: TCP
      port: 443 
      targetPort: 443  
---  
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Release.Name }}-pcf-deployment
  labels:
    epc-mode: pcf
spec:
  replicas: 1
  selector:
    matchLabels:
      epc-mode: pcf
  template:
    metadata:
      annotations:
         k8s.v1.cni.cncf.io/networks: '[
                 { "name": "{{ .Release.Name }}-sbi-nad",
                    "interface": "sbi",
                   "ips": [ {{- cat .Values.sbiAddresses.pcf "/" .Values.sbiAddresses.NetworkMask | nospace | quote }} ] }                   
         ]'    
      labels:
        epc-mode: pcf
    spec:
      serviceAccountName: {{ .Release.Name }}-k8s-wait-for
      initContainers:     
      - name: wait-for-nrf
        image: "{{ .Values.k8swait.repository }}:{{ .Values.k8swait.tag }}"
        imagePullPolicy: {{ .Values.k8swait.pullPolicy }}
        args:
          - "pod"
          - "-lepc-mode=nrf"
      - name: wait-for-scp
        image: "{{ .Values.k8swait.repository }}:{{ .Values.k8swait.tag }}"
        imagePullPolicy: {{ .Values.k8swait.pullPolicy }}
        args:
          - "pod"
          - "-lepc-mode=scp"
      - name: wait-for-mongodb
        image: "{{ .Values.k8swait.repository }}:{{ .Values.k8swait.tag }}"
        imagePullPolicy: {{ .Values.k8swait.pullPolicy }}
        args:
          - "pod"
          - "-lapp=open5gs-mongodb"                        
      containers:
        - name: pcf
          image: "{{ .Values.open5gs.image.repository }}:{{ .Values.open5gs.image.tag }}"
          imagePullPolicy: {{ .Values.open5gs.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
          - ip route add {{ .Values.roamingSBInetwork }} via {{ .Values.sbiAddresses.defaultGW }};
            open5gs-pcfd -c /open5gs/config-map/pcf.yaml;
          volumeMounts:
          - name: {{ .Release.Name }}-pcf-config
            mountPath: /open5gs/config-map/pcf.yaml
            subPath: "pcf.yaml"
          - mountPath: "/tls"
            name: tls            
            readOnly: true
          securityContext:
             capabilities:
               add:
               - NET_ADMIN         
      {{- if .Values.controlPlaneNodes}}
      nodeSelector: {{- .Values.controlPlaneNodes.nodeSelector | toYaml | nindent 8 }}
      {{- end }}      
      volumes:
        - name: {{ .Release.Name }}-pcf-config
          configMap:
            name: {{ .Release.Name }}-pcf-config         
        - name: tls
          secret:
            secretName: mtls-hplmn-pcf-cert